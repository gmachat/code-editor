{"ast":null,"code":"var _jsxFileName = \"/Users/greg/Desktop/CodeRoomFrontend/coderoomfrontend/src/components/TextEditor/TextEditor.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport Quill from \"quill\";\nimport \"quill/dist/quill.snow.css\";\nimport { io } from \"socket.io-client\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SAVE_INTERVAL_MS = 2000;\nexport default function TextEditor({\n  isRequired,\n  fieldName,\n  fieldId,\n  onChangeFunction,\n  classNames\n}) {\n  _s();\n\n  const {\n    id: documentId\n  } = useParams();\n  const [socket, setSocket] = useState();\n  const [quill, setQuill] = useState();\n  useEffect(() => {\n    const s = io(\"http://localhost:3001\");\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (socket == null || quill == null) return; // socket.once(\"load-document\"\n    // , document => {\n    //   quill.setContents(document)\n    //   quill.enable()\n    // }\n    // )\n    // socket.emit(\"get-document\", documentId)\n  }, [socket, quill, documentId]);\n  useEffect(() => {\n    if (socket == null || quill == null) return; // const interval = setInterval(() => {\n    // socket.emit(\"save-document\", quill.getContents())\n    // }, SAVE_INTERVAL_MS)\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [socket, quill]);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = delta => {\n      quill.updateContents(delta);\n    };\n\n    socket.on(\"receive-changes\", handler);\n    return () => {\n      socket.off(\"receive-changes\", handler);\n    };\n  }, [socket, quill]);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = (delta, oldDelta, source) => {\n      if (source !== \"user\") return;\n      socket.emit(\"send-changes\", delta);\n    };\n\n    quill.on(\"text-change\", handler);\n    return () => {\n      quill.off(\"text-change\", handler);\n    };\n  }, [socket, quill]);\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return;\n    wrapper.innerHTML = \"\";\n    const editor = document.createElement(\"div\");\n    wrapper.append(editor);\n    const q = new Quill(editor, {\n      \"modules\": {\n        \"toolbar\": false\n      }\n    });\n    q.disable();\n    q.setText(\"Loading...\"); //set state of code in text here e.g. [inputText, setInputText ] = useState\n\n    setQuill(q);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    required: isRequired,\n    name: fieldName,\n    id: fieldId,\n    onChange: event => onChangeFunction(event),\n    className: \"container \" + classNames,\n    ref: wrapperRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TextEditor, \"gbgidFagK+IuriZVWTIcbVbmJVI=\", false, function () {\n  return [useParams];\n});\n\n_c = TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["/Users/greg/Desktop/CodeRoomFrontend/coderoomfrontend/src/components/TextEditor/TextEditor.js"],"names":["useCallback","useEffect","useState","Quill","io","useParams","SAVE_INTERVAL_MS","TextEditor","isRequired","fieldName","fieldId","onChangeFunction","classNames","id","documentId","socket","setSocket","quill","setQuill","s","disconnect","clearInterval","interval","handler","delta","updateContents","on","off","oldDelta","source","emit","wrapperRef","wrapper","innerHTML","editor","document","createElement","append","q","disable","setText","event"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useState } from \"react\"\nimport Quill from \"quill\"\nimport \"quill/dist/quill.snow.css\"\nimport { io } from \"socket.io-client\"\nimport { useParams } from \"react-router-dom\"\n\nconst SAVE_INTERVAL_MS = 2000\n\n\nexport default function TextEditor({isRequired, fieldName, fieldId, onChangeFunction, classNames}) {\n\n\n\n  const { id: documentId } = useParams()\n  const [socket, setSocket] = useState()\n  const [quill, setQuill] = useState()\n\n  useEffect(() => {\n    const s = io(\"http://localhost:3001\")\n    setSocket(s)\n\n    return () => {\n      s.disconnect()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (socket == null || quill == null) return\n\n    // socket.once(\"load-document\"\n    // , document => {\n    //   quill.setContents(document)\n    //   quill.enable()\n    // }\n    // )\n\n    // socket.emit(\"get-document\", documentId)\n  }, [socket, quill, documentId])\n\n  useEffect(() => {\n    if (socket == null || quill == null) return\n\n    // const interval = setInterval(() => {\n      // socket.emit(\"save-document\", quill.getContents())\n    // }, SAVE_INTERVAL_MS)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [socket, quill])\n\n  useEffect(() => {\n    if (socket == null || quill == null) return\n\n    const handler = delta => {\n      quill.updateContents(delta)\n    }\n    socket.on(\"receive-changes\", handler)\n\n    return () => {\n      socket.off(\"receive-changes\", handler)\n    }\n  }, [socket, quill])\n\n  useEffect(() => {\n    if (socket == null || quill == null) return\n\n    const handler = (delta, oldDelta, source) => {\n      if (source !== \"user\") return\n      socket.emit(\"send-changes\", delta)\n    }\n    quill.on(\"text-change\", handler)\n\n    return () => {\n      quill.off(\"text-change\", handler)\n    }\n  }, [socket, quill])\n\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return\n\n    wrapper.innerHTML = \"\"\n    const editor = document.createElement(\"div\")\n    wrapper.append(editor)\n    const q = new Quill(editor, {\n      \"modules\": {\n      \"toolbar\": false\n  }\n    })\n    q.disable()\n    q.setText(\"Loading...\")\n\n    //set state of code in text here e.g. [inputText, setInputText ] = useState\n\n\n\n    setQuill(q)\n  }, [])\n  return <div \n        required={isRequired}\n        name={fieldName}\n        id={fieldId}\n        onChange={(event) => onChangeFunction(event)}\n        className={\"container \" + classNames} \n        ref={wrapperRef}>\n  </div>\n  \n}\n"]},"metadata":{},"sourceType":"module"}