{"ast":null,"code":"var _jsxFileName = \"/Users/greg/Desktop/CodeRoomFrontend/coderoomfrontend/src/components/Compiler.js\";\nimport React, { Component } from \"react\";\nimport \"./Compiler.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_JUDGE0_KEY;\nexport default class Compiler extends Component {\n  constructor(props) {\n    super(props);\n\n    this.input = event => {\n      event.preventDefault();\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.userInput = event => {\n      event.preventDefault();\n      this.setState({\n        user_input: event.target.value\n      });\n    };\n\n    this.language = event => {\n      event.preventDefault();\n      this.setState({\n        language_id: event.target.value\n      });\n    };\n\n    this.submit = async e => {\n      e.preventDefault();\n      let outputText = document.getElementById(\"output\");\n      outputText.innerHTML = \"\";\n      outputText.innerHTML += \"Creating Submission ...\\n\";\n      const response = await fetch(\"https://judge0-extra.p.rapidapi.com/submissions\", {\n        method: \"POST\",\n        headers: {\n          \"x-rapidapi-host\": \"judge0-extra.p.rapidapi.com\",\n          \"x-rapidapi-key\": API_KEY,\n          \"content-type\": \"application/json\",\n          accept: \"application/json\"\n        },\n        body: JSON.stringify({\n          source_code: this.state.input,\n          stdin: this.state.user_input,\n          language_id: this.state.language_id\n        })\n      });\n      outputText.innerHTML += \"Submission Created ...\\n\";\n      const jsonResponse = await response.json();\n      let jsonGetSolution = {\n        status: {\n          description: \"Queue\"\n        },\n        stderr: null,\n        compile_output: null\n      };\n\n      while (jsonGetSolution.status.description !== \"Accepted\" && jsonGetSolution.stderr == null && jsonGetSolution.compile_output == null) {\n        outputText.innerHTML = `Creating Submission ... \\nSubmission Created ...\\nChecking Submission Status\\nstatus : ${jsonGetSolution.status.description}`;\n\n        if (jsonResponse.token) {\n          let url = `https://judge0-extra.p.rapidapi.com/submissions/${jsonResponse.token}?base64_encoded=true`;\n          const getSolution = await fetch(url, {\n            method: \"GET\",\n            headers: {\n              \"x-rapidapi-host\": \"judge0-extra.p.rapidapi.com\",\n              \"x-rapidapi-key\": API_KEY,\n              \"content-type\": \"application/json\"\n            }\n          });\n          jsonGetSolution = await getSolution.json();\n        }\n      }\n\n      if (jsonGetSolution.stdout) {\n        const output = atob(jsonGetSolution.stdout);\n        outputText.innerHTML = \"\";\n        outputText.innerHTML += `Results : ${output}\\nExecution Time : ${jsonGetSolution.time} Secs\\nMemory used : ${jsonGetSolution.memory} bytes`;\n      } else if (jsonGetSolution.stderr) {\n        const error = atob(jsonGetSolution.stderr);\n        outputText.innerHTML = \"\";\n        outputText.innerHTML += `\\n Error :${error}`;\n      } else {\n        const compilation_error = atob(jsonGetSolution.compile_output);\n        outputText.innerHTML = \"\";\n        outputText.innerHTML += `\\n Error :${compilation_error}`;\n      }\n    };\n\n    this.state = {\n      input: ``,\n      output: ``,\n      language_id: 2,\n      user_input: ``\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 ml-4 \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"solution \",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge badge-info heading mt-2 \",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-code fa-fw fa-lg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), \" Code Here\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            required: true,\n            name: \"solution\",\n            id: \"source\",\n            onChange: this.input,\n            className: \" source\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-danger ml-2 mr-2 \",\n            onClick: this.submit,\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fas fa-cog fa-fw\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), \" Run\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"tags\",\n            className: \"mr-1\",\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              className: \"heading\",\n              children: \"Language:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: this.state.language,\n            onChange: this.language,\n            id: \"tags\",\n            className: \"form-control form-inline mb-2 language\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"C++\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4\",\n              children: \"Java\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"Python\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-5\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge badge-info heading my-2 \",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-exclamation fa-fw fa-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), \" Output\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              id: \"output\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 ml-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"badge badge-primary heading my-2 \",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-user fa-fw fa-md\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), \" User Input\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"input\",\n          onChange: this.userInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}","map":{"version":3,"sources":["/Users/greg/Desktop/CodeRoomFrontend/coderoomfrontend/src/components/Compiler.js"],"names":["React","Component","API_KEY","process","env","REACT_APP_JUDGE0_KEY","Compiler","constructor","props","input","event","preventDefault","setState","target","value","userInput","user_input","language","language_id","submit","e","outputText","document","getElementById","innerHTML","response","fetch","method","headers","accept","body","JSON","stringify","source_code","state","stdin","jsonResponse","json","jsonGetSolution","status","description","stderr","compile_output","token","url","getSolution","stdout","output","atob","time","memory","error","compilation_error","render"],"mappings":"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","sourcesContent":["\nimport React, { Component } from \"react\";\nimport \"./Compiler.css\";\n\n\nconst API_KEY = process.env.REACT_APP_JUDGE0_KEY\n\n\nexport default class Compiler extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: ``,\n      output: ``,\n      language_id: 2,\n      user_input: ``,\n    };\n  }\n  input = (event) => {\n    event.preventDefault();\n    this.setState({ input: event.target.value });\n  };\n  userInput = (event) => {\n    event.preventDefault();\n    this.setState({ user_input: event.target.value });\n  };\n  language = (event) => {\n    event.preventDefault();\n    this.setState({ language_id: event.target.value });\n  };\n\n  submit = async (e) => {\n    e.preventDefault();\n    let outputText = document.getElementById(\"output\");\n    outputText.innerHTML = \"\";\n    outputText.innerHTML += \"Creating Submission ...\\n\";\n    const response = await fetch(\n      \"https://judge0-extra.p.rapidapi.com/submissions\",\n      {\n        method: \"POST\",\n        headers: {\n          \"x-rapidapi-host\": \"judge0-extra.p.rapidapi.com\",\n          \"x-rapidapi-key\": API_KEY, \n          \"content-type\": \"application/json\",\n           accept: \"application/json\",\n        },\n        body: JSON.stringify({\n          source_code: this.state.input,\n          stdin: this.state.user_input,\n          language_id: this.state.language_id,\n        }),\n      }\n    );\n    outputText.innerHTML += \"Submission Created ...\\n\";\n    const jsonResponse = await response.json();\n\n    let jsonGetSolution = {\n      status: { description: \"Queue\" },\n      stderr: null,\n      compile_output: null,\n    };\n\n    while (\n      jsonGetSolution.status.description !== \"Accepted\" &&\n      jsonGetSolution.stderr == null &&\n      jsonGetSolution.compile_output == null\n    ) {\n      outputText.innerHTML = `Creating Submission ... \\nSubmission Created ...\\nChecking Submission Status\\nstatus : ${jsonGetSolution.status.description}`;\n      if (jsonResponse.token) {\n        let url = `https://judge0-extra.p.rapidapi.com/submissions/${jsonResponse.token}?base64_encoded=true`;\n\n        const getSolution = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-host\": \"judge0-extra.p.rapidapi.com\",\n            \"x-rapidapi-key\": API_KEY,\n            \"content-type\": \"application/json\",\n          },\n        });\n\n        jsonGetSolution = await getSolution.json();\n      }\n    }\n    if (jsonGetSolution.stdout) {\n      const output = atob(jsonGetSolution.stdout);\n\n      outputText.innerHTML = \"\";\n\n      outputText.innerHTML += `Results : ${output}\\nExecution Time : ${jsonGetSolution.time} Secs\\nMemory used : ${jsonGetSolution.memory} bytes`;\n    } else if (jsonGetSolution.stderr) {\n      const error = atob(jsonGetSolution.stderr);\n\n      outputText.innerHTML = \"\";\n\n      outputText.innerHTML += `\\n Error :${error}`;\n    } else {\n      const compilation_error = atob(jsonGetSolution.compile_output);\n\n      outputText.innerHTML = \"\";\n\n      outputText.innerHTML += `\\n Error :${compilation_error}`;\n    }\n  };\n  render() {\n    return (\n      <>\n        <div className=\"row container-fluid\">\n          <div className=\"col-6 ml-4 \">\n            <label for=\"solution \">\n              <span className=\"badge badge-info heading mt-2 \">\n                <i className=\"fas fa-code fa-fw fa-lg\"></i> Code Here\n              </span>\n            </label>\n            <textarea\n              required\n              name=\"solution\"\n              id=\"source\"\n              onChange={this.input}\n              className=\" source\"\n            ></textarea>\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger ml-2 mr-2 \"\n              onClick={this.submit}\n            >\n              <i class=\"fas fa-cog fa-fw\"></i> Run\n            </button>\n\n            <label for=\"tags\" className=\"mr-1\">\n              <b className=\"heading\">Language:</b>\n            </label>\n            <select\n              value={this.state.language}\n              onChange={this.language}\n              id=\"tags\"\n              className=\"form-control form-inline mb-2 language\"\n            >\n              <option value=\"2\">C++</option>\n              <option value=\"1\">C</option>\n              <option value=\"4\">Java</option>\n              <option value=\"10\">Python</option>\n            </select>\n          </div>\n          <div className=\"col-5\">\n            <div>\n              <span className=\"badge badge-info heading my-2 \">\n                <i className=\"fas fa-exclamation fa-fw fa-md\"></i> Output\n              </span>\n              <textarea id=\"output\"></textarea>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-2 ml-5\">\n          <span className=\"badge badge-primary heading my-2 \">\n            <i className=\"fas fa-user fa-fw fa-md\"></i> User Input\n          </span>\n          <br />\n          <textarea id=\"input\" onChange={this.userInput}></textarea>\n        </div>\n      </>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}