{"ast":null,"code":"var _jsxFileName = \"/Users/greg/Desktop/CodeRoomFrontend/coderoomfrontend/src/components/Compiler.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from \"react\";\nimport \"./Compiler.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_JUDGE0_KEY;\n\nconst Compiler = () => {\n  _s();\n\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n  const [language_id, setLanguage_id] = useState(10);\n  const [user_input, setUser_input] = useState('');\n\n  const submit = async e => {\n    e.preventDefault();\n    let outputText = document.getElementById(\"output\");\n    outputText.innerHTML = \"\";\n    outputText.innerHTML += \"Creating Submission ...\\n\";\n    console.log(API_KEY);\n    console.log(JSON.stringify({\n      source_code: input,\n      stdin: user_input,\n      language_id: language_id\n    }));\n    const response = await fetch(\"https://judge0-ce.p.rapidapi.com/submissions/?base64_encoded=false&wait=false\", {\n      method: \"POST\",\n      headers: {\n        \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n        \"x-rapidapi-key\": API_KEY,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        source_code: input,\n        stdin: user_input,\n        language_id: language_id\n      })\n    });\n    outputText.innerHTML += \"Submission Created ...\\n\";\n    const jsonResponse = await response.json();\n    console.log(jsonResponse);\n    let jsonGetSolution = {\n      status: {\n        description: \"Queue\"\n      },\n      stderr: null,\n      compile_output: null\n    };\n\n    while (jsonGetSolution.status.description !== \"Accepted\" && jsonGetSolution.stderr == null && jsonGetSolution.compile_output == null) {\n      outputText.innerHTML = `Creating Submission ... \\nSubmission Created ...\\nChecking Submission Status\\nstatus : ${jsonGetSolution.status.description}`;\n\n      if (jsonResponse.token) {\n        let url = `https://judge0-ce.p.rapidapi.com/submissions/${jsonResponse.token}?base64_encoded=true`;\n        const getSolution = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n            \"x-rapidapi-key\": API_KEY,\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        jsonGetSolution = await getSolution.json();\n        console.log(jsonGetSolution);\n      }\n    }\n\n    if (jsonGetSolution.stdout) {\n      console.log('1');\n      const outputSolution = atob(jsonGetSolution.stdout);\n      outputText.innerHTML = \"\";\n      outputText.innerHTML += `Results : ${outputSolution}\\nExecution Time : ${jsonGetSolution.time} Secs\\nMemory used : ${jsonGetSolution.memory} bytes`;\n    } else if (jsonGetSolution.stderr) {\n      console.log('2');\n      const error = atob(jsonGetSolution.stderr);\n      outputText.innerHTML = \"\";\n      outputText.innerHTML += `\\n Error :${error}`;\n    } else {\n      console.log('3');\n      const compilation_error = atob(jsonGetSolution.compile_output);\n      outputText.innerHTML = \"\";\n      outputText.innerHTML += `\\n Error :${compilation_error}`;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6 ml-4 \",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"solution \",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge badge-info heading mt-2 \",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-code fa-fw fa-lg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), \" Code Here\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          required: true,\n          name: \"solution\",\n          id: \"source\",\n          onChange: event => setInput(event.target.value),\n          className: \" source\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-danger ml-2 mr-2 \",\n          onClick: event => submit(event),\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-cog fa-fw\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), \" Run\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"tags\",\n          className: \"mr-1\",\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"heading\",\n            children: \"Language:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: language_id,\n          onChange: event => setLanguage_id(event.target.value),\n          id: \"tags\",\n          className: \"form-control form-inline mb-2 language\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"C++\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"4\",\n            children: \"Java\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"10\",\n            children: \"Python\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge badge-info heading my-2 \",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-exclamation fa-fw fa-md\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), \" Output\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 ml-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge badge-primary heading my-2 \",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-user fa-fw fa-md\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), \" User Input\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"input\",\n        onChange: event => setUser_input(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Compiler, \"nmjz6MaZjpJM2MPDqybPhyZVfA0=\");\n\n_c = Compiler;\nexport default Compiler;\n\nvar _c;\n\n$RefreshReg$(_c, \"Compiler\");","map":{"version":3,"sources":["/Users/greg/Desktop/CodeRoomFrontend/coderoomfrontend/src/components/Compiler.js"],"names":["React","Component","useState","API_KEY","process","env","REACT_APP_JUDGE0_KEY","Compiler","input","setInput","output","setOutput","language_id","setLanguage_id","user_input","setUser_input","submit","e","preventDefault","outputText","document","getElementById","innerHTML","console","log","JSON","stringify","source_code","stdin","response","fetch","method","headers","body","jsonResponse","json","jsonGetSolution","status","description","stderr","compile_output","token","url","getSolution","stdout","outputSolution","atob","time","memory","error","compilation_error","event","target","value"],"mappings":"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","sourcesContent":["\nimport React, { Component, useState } from \"react\";\nimport \"./Compiler.css\";\n\n\nconst API_KEY = process.env.REACT_APP_JUDGE0_KEY\n\n\nconst Compiler = () => {\n\n  const [input, setInput] = useState('');\n  const [output, setOutput] = useState('');\n  const [language_id, setLanguage_id] = useState(10);\n  const [user_input, setUser_input] = useState('');\n\n\n\n  const submit = async (e) => {\n    e.preventDefault();\n    let outputText = document.getElementById(\"output\");\n    outputText.innerHTML = \"\";\n    outputText.innerHTML += \"Creating Submission ...\\n\";\n\n    console.log(API_KEY)\n    console.log(JSON.stringify({\n      source_code: input,\n      stdin: user_input,\n      language_id: language_id,\n    }))\n\n    const response = await fetch(\n      \"https://judge0-ce.p.rapidapi.com/submissions/?base64_encoded=false&wait=false\",\n      {\n        method: \"POST\",\n        headers: {\n          \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n          \"x-rapidapi-key\": API_KEY, \n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          source_code: input,\n          stdin: user_input,\n          language_id: language_id,\n        }),\n      }\n    );\n    outputText.innerHTML += \"Submission Created ...\\n\";\n    const jsonResponse = await response.json();\n    console.log(jsonResponse)\n\n\n    let jsonGetSolution = {\n      status: { description: \"Queue\" },\n      stderr: null,\n      compile_output: null,\n    };\n\n    while (\n      jsonGetSolution.status.description !== \"Accepted\" &&\n      jsonGetSolution.stderr == null &&\n      jsonGetSolution.compile_output == null\n    ) {\n      outputText.innerHTML = `Creating Submission ... \\nSubmission Created ...\\nChecking Submission Status\\nstatus : ${jsonGetSolution.status.description}`;\n      if (jsonResponse.token) {\n        let url = `https://judge0-ce.p.rapidapi.com/submissions/${jsonResponse.token}?base64_encoded=true`;\n\n        const getSolution = await fetch(url, {\n          method: \"GET\",\n          headers: {\n            \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n            \"x-rapidapi-key\": API_KEY,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n\n        jsonGetSolution = await getSolution.json();\n        console.log(jsonGetSolution)\n      }\n    }\n    if (jsonGetSolution.stdout) {\n      console.log('1')\n      const outputSolution = atob(jsonGetSolution.stdout);\n\n      outputText.innerHTML = \"\";\n\n      outputText.innerHTML += `Results : ${outputSolution}\\nExecution Time : ${jsonGetSolution.time} Secs\\nMemory used : ${jsonGetSolution.memory} bytes`;\n    } else if (jsonGetSolution.stderr) {\n      console.log('2')\n      const error = atob(jsonGetSolution.stderr);\n\n      outputText.innerHTML = \"\";\n\n      outputText.innerHTML += `\\n Error :${error}`;\n    } else {\n      console.log('3')\n      const compilation_error = atob(jsonGetSolution.compile_output);\n\n      outputText.innerHTML = \"\";\n\n      outputText.innerHTML += `\\n Error :${compilation_error}`;\n    }\n  };\n\n    return (\n      <>\n        <div className=\"row container-fluid\">\n          <div className=\"col-6 ml-4 \">\n            <label for=\"solution \">\n              <span className=\"badge badge-info heading mt-2 \">\n                <i className=\"fas fa-code fa-fw fa-lg\"></i> Code Here\n              </span>\n            </label>\n            <textarea\n              required\n              name=\"solution\"\n              id=\"source\"\n              onChange={(event) => setInput(event.target.value)}\n              className=\" source\"\n            ></textarea>\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-danger ml-2 mr-2 \"\n              onClick={(event) => submit(event)}\n            >\n              <i class=\"fas fa-cog fa-fw\"></i> Run\n            </button>\n\n            <label for=\"tags\" className=\"mr-1\">\n              <b className=\"heading\">Language:</b>\n            </label>\n            <select\n              value={language_id}\n              onChange={(event) => setLanguage_id(event.target.value)}\n              id=\"tags\"\n              className=\"form-control form-inline mb-2 language\"\n            >\n              <option value=\"2\">C++</option>\n              <option value=\"1\">C</option>\n              <option value=\"4\">Java</option>\n              <option value=\"10\">Python</option>\n            </select>\n          </div>\n          <div className=\"col-5\">\n            <div>\n              <span className=\"badge badge-info heading my-2 \">\n                <i className=\"fas fa-exclamation fa-fw fa-md\"></i> Output\n              </span>\n              <textarea id=\"output\"></textarea>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"mt-2 ml-5\">\n          <span className=\"badge badge-primary heading my-2 \">\n            <i className=\"fas fa-user fa-fw fa-md\"></i> User Input\n          </span>\n          <br />\n          <textarea id=\"input\" onChange={(event) => setUser_input(event.target.value)}></textarea>\n        </div>\n      </>\n    );\n  \n}\n\nexport default Compiler"]},"metadata":{},"sourceType":"module"}